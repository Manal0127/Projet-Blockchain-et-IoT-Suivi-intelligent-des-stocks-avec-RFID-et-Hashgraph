import smtplib
from email.message import EmailMessage
from config import EMAIL_FROM, EMAIL_TO, EMAIL_SUBJECT, SMTP_SERVER, SMTP_PORT, EMAIL_PASSWORD

# Active/d√©sactive l‚Äôenvoi d‚Äôemail (utile si tu veux juste tester sans spammer)
ENVOYER_EMAILS = True

def envoyer_email(matiere, quantite):
    if not ENVOYER_EMAILS:
        print(f"‚ö†Ô∏è Envoi d‚Äôemail d√©sactiv√© pour {matiere} (quantit√©: {quantite})")
        return

    msg = EmailMessage()
    msg['Subject'] = EMAIL_SUBJECT
    msg['From'] = EMAIL_FROM
    msg['To'] = EMAIL_TO
    msg.set_content(
        f"""Bonjour fournisseur,

Le stock de la mati√®re premi√®re suivante est critique :

- Mati√®re : {matiere}
- Quantit√© restante : {quantite} unit√©s

Veuillez nous envoyer le prix actuel pour g√©n√©rer le contrat de commande.

Cordialement,
Le syst√®me IoT de gestion de stock.
"""
    )
    try:
        with smtplib.SMTP(SMTP_SERVER, SMTP_PORT) as server:
            server.starttls()
            server.login(EMAIL_FROM, EMAIL_PASSWORD)
            server.send_message(msg)
            print(f"üìß Email envoy√© √† {EMAIL_TO} pour {matiere}.")
    except smtplib.SMTPResponseException as e:
        if e.smtp_code == 550 and "Daily user sending limit exceeded" in str(e.smtp_error):
            print("‚ùå Limite quotidienne d‚Äôenvoi d‚Äôemails d√©pass√©e chez Gmail. Veuillez attendre ou changer de service SMTP.")
        else:
            print(f"‚ùå Erreur SMTP lors de l‚Äôenvoi de l‚Äôemail : {e.smtp_code} - {e.smtp_error}")
    except Exception as e:
        print(f"‚ùå Erreur lors de l‚Äôenvoi de l‚Äôemail : {e}")

def send_price_reply(matiere, prix):
    if not ENVOYER_EMAILS:
        print(f"‚ö†Ô∏è Envoi d‚Äôemail d√©sactiv√© pour la r√©ponse simul√©e : {matiere} √† {prix} MAD")
        return

    msg = EmailMessage()
    msg['Subject'] = f"R√©ponse de prix - {matiere}"
    msg['From'] = EMAIL_FROM
    msg['To'] = EMAIL_FROM
    msg.set_content(f"Prix pour {matiere}: {prix} MAD")
    try:
        with smtplib.SMTP(SMTP_SERVER, SMTP_PORT) as smtp:
            smtp.starttls()
            smtp.login(EMAIL_FROM, EMAIL_PASSWORD)
            smtp.send_message(msg)
            print(f"[Fournisseur] R√©ponse simul√©e : {matiere} √† {prix} MAD")
    except smtplib.SMTPResponseException as e:
        if e.smtp_code == 550 and "Daily user sending limit exceeded" in str(e.smtp_error):
            print("‚ùå Limite quotidienne d‚Äôenvoi d‚Äôemails d√©pass√©e chez Gmail. Veuillez attendre ou changer de service SMTP.")
        else:
            print(f"‚ùå Erreur SMTP lors de l‚Äôenvoi de la r√©ponse : {e.smtp_code} - {e.smtp_error}")
    except Exception as e:
        print(f"‚ùå Erreur lors de l‚Äôenvoi de la r√©ponse : {e}")